/**
 * Fpass Content API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { BaseEvent } from '../models';
import { NewUserRequest } from '../models';
import { UserCredentialRequest } from '../models';
import { UserRecoverRequest } from '../models';
/**
 * UserApi - axios parameter creator
 * @export
 */
export declare const UserApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {NewUserRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    newUser: (body?: NewUserRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {UserCredentialRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userCredential: (body?: UserCredentialRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {UserRecoverRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userRecover: (body?: UserRecoverRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * UserApi - functional programming interface
 * @export
 */
export declare const UserApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {NewUserRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    newUser(body?: NewUserRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BaseEvent>>;
    /**
     *
     * @param {UserCredentialRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userCredential(body?: UserCredentialRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BaseEvent>>;
    /**
     *
     * @param {UserRecoverRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userRecover(body?: UserRecoverRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BaseEvent>>;
};
/**
 * UserApi - factory interface
 * @export
 */
export declare const UserApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {NewUserRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    newUser(body?: NewUserRequest, options?: any): AxiosPromise<BaseEvent>;
    /**
     *
     * @param {UserCredentialRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userCredential(body?: UserCredentialRequest, options?: any): AxiosPromise<BaseEvent>;
    /**
     *
     * @param {UserRecoverRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userRecover(body?: UserRecoverRequest, options?: any): AxiosPromise<BaseEvent>;
};
/**
 * UserApi - object-oriented interface
 * @export
 * @class UserApi
 * @extends {BaseAPI}
 */
export declare class UserApi extends BaseAPI {
    /**
     *
     * @param {NewUserRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApi
     */
    newUser(body?: NewUserRequest, options?: any): Promise<import("axios").AxiosResponse<BaseEvent>>;
    /**
     *
     * @param {UserCredentialRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApi
     */
    userCredential(body?: UserCredentialRequest, options?: any): Promise<import("axios").AxiosResponse<BaseEvent>>;
    /**
     *
     * @param {UserRecoverRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApi
     */
    userRecover(body?: UserRecoverRequest, options?: any): Promise<import("axios").AxiosResponse<BaseEvent>>;
}
