/**
 * Fpass Content API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Resource } from '../models';
import { Uuid } from '../models';
/**
 * DisplayApi - axios parameter creator
 * @export
 */
export declare const DisplayApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Banners em destaque de cursos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplayFeatured: (options?: any) => Promise<RequestArgs>;
    /**
     * Retormar a aula
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplayResumeLesson: (options?: any) => Promise<RequestArgs>;
    /**
     * Lista de seções de recursos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplaySections: (options?: any) => Promise<RequestArgs>;
    /**
     * Lista de seções de recursos
     * @param {Uuid} id resourceId de um resource com type display.section
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplaySectionsResources: (id: Uuid, options?: any) => Promise<RequestArgs>;
};
/**
 * DisplayApi - functional programming interface
 * @export
 */
export declare const DisplayApiFp: (configuration?: Configuration) => {
    /**
     * Banners em destaque de cursos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplayFeatured(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    /**
     * Retormar a aula
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplayResumeLesson(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    /**
     * Lista de seções de recursos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplaySections(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    /**
     * Lista de seções de recursos
     * @param {Uuid} id resourceId de um resource com type display.section
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplaySectionsResources(id: Uuid, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
};
/**
 * DisplayApi - factory interface
 * @export
 */
export declare const DisplayApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Banners em destaque de cursos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplayFeatured(options?: any): AxiosPromise<Resource>;
    /**
     * Retormar a aula
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplayResumeLesson(options?: any): AxiosPromise<Resource>;
    /**
     * Lista de seções de recursos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplaySections(options?: any): AxiosPromise<Resource>;
    /**
     * Lista de seções de recursos
     * @param {Uuid} id resourceId de um resource com type display.section
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDisplaySectionsResources(id: Uuid, options?: any): AxiosPromise<Resource>;
};
/**
 * DisplayApi - object-oriented interface
 * @export
 * @class DisplayApi
 * @extends {BaseAPI}
 */
export declare class DisplayApi extends BaseAPI {
    /**
     * Banners em destaque de cursos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DisplayApi
     */
    getDisplayFeatured(options?: any): Promise<import("axios").AxiosResponse<Resource>>;
    /**
     * Retormar a aula
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DisplayApi
     */
    getDisplayResumeLesson(options?: any): Promise<import("axios").AxiosResponse<Resource>>;
    /**
     * Lista de seções de recursos
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DisplayApi
     */
    getDisplaySections(options?: any): Promise<import("axios").AxiosResponse<Resource>>;
    /**
     * Lista de seções de recursos
     * @param {Uuid} id resourceId de um resource com type display.section
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DisplayApi
     */
    getDisplaySectionsResources(id: Uuid, options?: any): Promise<import("axios").AxiosResponse<Resource>>;
}
